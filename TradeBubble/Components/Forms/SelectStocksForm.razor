@using AlgoTrading.Broker
@using AlgoTrading.Stocks  
@using TradeBubble.Components.Layouts
@using TradeBubble.Components.Containers  

@using Syncfusion.Blazor.Grids;

@using TradeBubble.ViewModels; 

<CellPage>
    <ContentCell ColumnWidth="6" CellTitle="Downloaded Stocks">
        <SfGrid @ref="availableStocks" DataSource="@AvailableStocks" TValue="IntervalStockIdentifier" AllowPaging="true" AllowSorting="true">
            <GridPageSettings PageSize="10" />
            <GridColumns>
                <GridColumn Field="@($"{nameof(IntervalStockIdentifier.Identifier)}.{nameof(StockIdentifier.Name)}")"
                            HeaderText="Name" IsPrimaryKey="true" />
                <GridColumn Field="@($"{nameof(IntervalStockIdentifier.Identifier)}.{nameof(StockIdentifier.FIGI)}")"
                            HeaderText="Name" IsPrimaryKey="true" />
                <GridColumn Field="@($"{nameof(IntervalStockIdentifier.Interval)}")"
                            HeaderText="Interval" IsPrimaryKey="true" />
            </GridColumns>
            <GridEvents TValue="IntervalStockIdentifier" OnRecordDoubleClick="OnAvailableRowDoubleClick"></GridEvents>
            <GridSortSettings>
                <GridSortColumns>
                    <GridSortColumn Field="@($"{nameof(IntervalStockIdentifier.Identifier)}.{nameof(StockIdentifier.Name)}")" 
                                    Direction="SortDirection.Ascending" />
                </GridSortColumns>
            </GridSortSettings>         
        </SfGrid>
    </ContentCell>
    <ContentCell ColumnWidth="6" CellTitle="Selected Stocks">
        <SfGrid @ref="selectedStocks" DataSource="@SelectedStocks" TValue="IntervalStockIdentifier" AllowPaging="true" AllowSorting="true">
            <GridPageSettings PageSize="10" />
            <GridColumns>
                <GridColumn Field="@($"{nameof(IntervalStockIdentifier.Identifier)}.{nameof(StockIdentifier.Name)}")"
                            HeaderText="Name" IsPrimaryKey="true" />
                <GridColumn Field="@($"{nameof(IntervalStockIdentifier.Identifier)}.{nameof(StockIdentifier.FIGI)}")"
                            HeaderText="Name" IsPrimaryKey="true" />
                <GridColumn Field="@($"{nameof(IntervalStockIdentifier.Interval)}")"
                            HeaderText="Interval" IsPrimaryKey="true" />
            </GridColumns>
            <GridEvents TValue="IntervalStockIdentifier" OnRecordDoubleClick="OnSelectedStockRowDoubleClick"></GridEvents>
            <GridSortSettings>
                <GridSortColumns>
                    <GridSortColumn Field="@($"{nameof(IntervalStockIdentifier.Identifier)}.{nameof(StockIdentifier.Name)}")"
                                    Direction="SortDirection.Ascending" />
                </GridSortColumns>
            </GridSortSettings>
        </SfGrid>
    </ContentCell>
</CellPage>

@code {
    private SfGrid<IntervalStockIdentifier> availableStocks;
    private SfGrid<IntervalStockIdentifier> selectedStocks;

    [Parameter]
    public List<IntervalStockIdentifier> AvailableStocks { get; set; }

    [Parameter]
    public List<IntervalStockIdentifier> SelectedStocks { get; set; }

    public void OnAvailableRowDoubleClick(RecordDoubleClickEventArgs<IntervalStockIdentifier> args)
    {
        if (!SelectedStocks.Contains(args.RowData))
            SelectedStocks.Add(args.RowData);

        selectedStocks.Refresh();
    }

    public void OnSelectedStockRowDoubleClick(RecordDoubleClickEventArgs<IntervalStockIdentifier> args)
    {
        SelectedStocks.Remove(args.RowData);

        selectedStocks.Refresh();
    }
}
