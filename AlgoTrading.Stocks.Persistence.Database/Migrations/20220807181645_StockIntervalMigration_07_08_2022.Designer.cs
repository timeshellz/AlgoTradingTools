// <auto-generated />
using System;
using AlgoTrading.Stocks.Persistence.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace AlgoTrading.Stocks.Persistence.Database.Migrations
{
    [DbContext(typeof(StockDataContext))]
    [Migration("20220807181645_StockIntervalMigration_07_08_2022")]
    partial class StockIntervalMigration_07_08_2022
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("AlgoTrading.Stocks.Persistence.Database.StockBarDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Close")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<decimal>("High")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Low")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Open")
                        .HasColumnType("numeric");

                    b.Property<string>("StockDataDTOFIGI")
                        .HasColumnType("text");

                    b.Property<int?>("StockDataDTOId")
                        .HasColumnType("integer");

                    b.Property<decimal>("Volume")
                        .HasColumnType("numeric");

                    b.HasKey("ID");

                    b.HasIndex("StockDataDTOFIGI", "StockDataDTOId");

                    b.ToTable("Bars");
                });

            modelBuilder.Entity("AlgoTrading.Stocks.Persistence.Database.StockDataDTO", b =>
                {
                    b.Property<string>("FIGI")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("InfoID")
                        .HasColumnType("integer");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("FIGI", "Id");

                    b.HasIndex("InfoID");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("AlgoTrading.Stocks.Persistence.Database.StockInfoDTO", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("Currency")
                        .HasColumnType("text");

                    b.Property<string>("FIGI")
                        .HasColumnType("text");

                    b.Property<TimeSpan>("Interval")
                        .HasColumnType("interval");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Sector")
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("StockInfos");
                });

            modelBuilder.Entity("AlgoTrading.Stocks.Persistence.Database.StockBarDTO", b =>
                {
                    b.HasOne("AlgoTrading.Stocks.Persistence.Database.StockDataDTO", null)
                        .WithMany("Bars")
                        .HasForeignKey("StockDataDTOFIGI", "StockDataDTOId");
                });

            modelBuilder.Entity("AlgoTrading.Stocks.Persistence.Database.StockDataDTO", b =>
                {
                    b.HasOne("AlgoTrading.Stocks.Persistence.Database.StockInfoDTO", "Info")
                        .WithMany()
                        .HasForeignKey("InfoID");

                    b.Navigation("Info");
                });

            modelBuilder.Entity("AlgoTrading.Stocks.Persistence.Database.StockDataDTO", b =>
                {
                    b.Navigation("Bars");
                });
#pragma warning restore 612, 618
        }
    }
}
